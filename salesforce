html:=====================================================================
<template>
    <lightning-card title="Client Due Diligence">
        <template if:true={clientDueDiligenceRecords.data}>
            <template for:each={clientDueDiligenceRecords.data} for:item="record">
                <lightning-input label={record.FieldsApi} value={record.HelpText} key={record.FieldsApi}></lightning-input>
            </template>
        </template>
    </lightning-card>
</template>

JS: ===================================================================

import { LightningElement, wire } from 'lwc';
import getClientDueDiligenceRecords from '@salesforce/apex/getFieldsRecords.getClientDueDiligenceRecords';

export default class YourLWC extends LightningElement {
    @wire(getClientDueDiligenceRecords)
    clientDueDiligenceRecords;
}


ApexClass: =====================

public class GetFieldsRecords {
  public class CustomMetadataWrapper {
    public String fieldsApi;
    public String helpText;

    public CustomMetadataWrapper(String fieldsApi, String helpText) {
      this.fieldsApi = fieldsApi;
      this.helpText = helpText;
    }
  }

  public static List<CustomMetadataWrapper> fetchClientDueDiligenceMetadata() {
    List<CustomMetadataWrapper> metadataList = new List<CustomMetadataWrapper>();

    // Query the custom metadata records
    List<ClientDueDiligence__mdt> records = [SELECT FieldsApi__c, HelpText__c FROM ClientDueDiligence__mdt];

    for (ClientDueDiligence__mdt record : records) {
      CustomMetadataWrapper metadata = new CustomMetadataWrapper(record.FieldsApi__c, record.HelpText__c);
      metadataList.add(metadata);
    }

    return metadataList;
  }
}
